(load "../../lib/scm/unit.scm")

(define (palyndrome? n)
  (define (helper i reverse-i)
    (cond
      ((or (= 0 (remainder i 10)) (< i reverse-i)) #f)
      ((or (= i reverse-i) (= (quotient i 10) reverse-i)) #t)
      (else (helper (quotient i 10)
                    (+ (* reverse-i 10) (remainder i 10))))))
  (helper n 0))

(assert-true (palyndrome? 1))
(assert-false (palyndrome? 10))
(assert-true (palyndrome? 121))
(assert-false (palyndrome? 122))
(assert-false (palyndrome? 221))
(assert-false (palyndrome? 1220))
(assert-true (palyndrome? 1221))
(assert-false (palyndrome? 12210))
(assert-true (palyndrome? 1234321))
(assert-true (palyndrome? 12344321))
(assert-false (palyndrome? 123421))
(assert-false (palyndrome? 124321))
